version: '3.8'

services:
  postgres:
    image: 'postgres:15'
    environment:
      - 'POSTGRES_DB=mydatabase'
      - 'POSTGRES_PASSWORD=secret'
      - 'POSTGRES_USER=myuser'
    ports:
      - "5432:5432"  # Usando a porta padr√£o para PostgreSQL

  sonarqube:
    image: sonarqube:community
    depends_on:
      dbsonarqube:
        condition: service_healthy
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://dbsonarqube:5432/sonar
      SONAR_JDBC_USERNAME: postgres
      SONAR_JDBC_PASSWORD: postgres
      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: true
    volumes:
      - sonarqube_data:/opt/SonarQube/data
      - sonarqube_extensions:/opt/SonarQube/extensions
      - sonarqube_logs:/opt/SonarQube/logs
    ports:
      - "9000:9000"

  dbsonarqube:
    container_name: dbsonarqube
    image: postgres:15
    ports:
      - "6433:5432"  # Porta separada para o SonarQube
    user: postgres
    environment:
      POSTGRES_HOST: dbsonarqube
      POSTGRES_DB: sonar
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 2
    volumes:
      - dbsonarqube_data:/var/lib/postgresql/data
  thinkot:
    build: .
    depends_on:
      - postgres
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mydatabase
      SPRING_DATASOURCE_USERNAME: myuser
      SPRING_DATASOURCE_PASSWORD: secret
    ports:
      - "8080:8080"
    volumes:
      - ./src:/app/src
      - ./pom.xml:/app/pom.xml

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  dbsonarqube_data: